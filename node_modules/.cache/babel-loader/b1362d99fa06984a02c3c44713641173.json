{"ast":null,"code":"var _jsxFileName = \"/Users/julianmastieri/Documents/GitHub/incusioonChallenge/src/pages/StatusPage/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport \"./StatusPage.css\";\nimport Table from \"../../components/Table/index\";\nimport { headers, apiNames } from \"./constants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction StatusPage() {\n  _s();\n\n  const [healthStatuses, setHealthStatuses] = useState([]);\n  const [intervalTime, setIntervalTime] = useState(0); //https://cors-anywhere.herokuapp.com/{type_your_url_here}\n\n  useEffect(() => {\n    const statusPromises = apiNames.map((apiName, index) => fetch(`https://api.factoryfour.com/${apiName}/health/status`, {\n      method: \"GET\",\n      // mode: \"cors\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"access-control-allow-origin\": \"*\",\n        \"Access-Control-Allow-Headers\": \"Origin, X-Requested-With, Content-Type, Accept\"\n      }\n    }).then(res => {\n      console.log(res);\n      return res.status < 400 ? res.json() : {\n        success: false,\n        message: `Unhealthy: ${res.status}`\n      };\n    }).then(data => {\n      return { ...data,\n        name: apiNames[index]\n      };\n    }).catch(error => alert(error)));\n    const fetchInterval = setInterval(() => {\n      Promise.all(statusPromises).then(allResponses => setHealthStatuses(allResponses));\n      if (intervalTime === 0) setIntervalTime(15000);\n    }, intervalTime);\n    return () => clearInterval(fetchInterval);\n  }, [intervalTime]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"status-page\",\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      title: \"Status Table\",\n      headers: headers,\n      healthStatuses: healthStatuses\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n\n_s(StatusPage, \"Zx3ySyqOuTqOecfsse64bBVCyQs=\");\n\n_c = StatusPage;\nexport default StatusPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"StatusPage\");","map":{"version":3,"names":["useEffect","useState","Table","headers","apiNames","StatusPage","healthStatuses","setHealthStatuses","intervalTime","setIntervalTime","statusPromises","map","apiName","index","fetch","method","then","res","console","log","status","json","success","message","data","name","catch","error","alert","fetchInterval","setInterval","Promise","all","allResponses","clearInterval"],"sources":["/Users/julianmastieri/Documents/GitHub/incusioonChallenge/src/pages/StatusPage/index.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport \"./StatusPage.css\";\nimport Table from \"../../components/Table/index\";\nimport { HealthStatus } from \"../../types\";\nimport { headers, apiNames } from \"./constants\";\n\nfunction StatusPage() {\n  const [healthStatuses, setHealthStatuses] = useState<HealthStatus[]>([]);\n  const [intervalTime, setIntervalTime] = useState<number>(0);\n\n  //https://cors-anywhere.herokuapp.com/{type_your_url_here}\n\n  useEffect(() => {\n    const statusPromises: Promise<HealthStatus>[] = apiNames.map(\n      (apiName, index) =>\n        fetch(`https://api.factoryfour.com/${apiName}/health/status`, {\n          method: \"GET\",\n          // mode: \"cors\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            \"access-control-allow-origin\": \"*\",\n            \"Access-Control-Allow-Headers\":\n              \"Origin, X-Requested-With, Content-Type, Accept\",\n          },\n        })\n          .then((res) => {\n            console.log(res)\n            return res.status < 400\n              ? res.json()\n              : { success: false, message: `Unhealthy: ${res.status}` };\n          })\n          .then((data) => {\n            return { ...data, name: apiNames[index] };\n          }).catch((error) => alert(error) \n          )\n    );\n\n    const fetchInterval = setInterval(() => {\n      Promise.all(statusPromises).then((allResponses) =>\n        setHealthStatuses(allResponses)\n      );\n      if (intervalTime === 0) setIntervalTime(15000);\n    }, intervalTime);\n\n    return () => clearInterval(fetchInterval);\n  }, [intervalTime]);\n\n  return (\n    <div className=\"status-page\">\n      <Table\n        title=\"Status Table\"\n        headers={headers}\n        healthStatuses={healthStatuses}\n      />\n    </div>\n  );\n}\n\nexport default StatusPage;\n"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAO,kBAAP;AACA,OAAOC,KAAP,MAAkB,8BAAlB;AAEA,SAASC,OAAT,EAAkBC,QAAlB,QAAkC,aAAlC;;;AAEA,SAASC,UAAT,GAAsB;EAAA;;EACpB,MAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCN,QAAQ,CAAiB,EAAjB,CAApD;EACA,MAAM,CAACO,YAAD,EAAeC,eAAf,IAAkCR,QAAQ,CAAS,CAAT,CAAhD,CAFoB,CAIpB;;EAEAD,SAAS,CAAC,MAAM;IACd,MAAMU,cAAuC,GAAGN,QAAQ,CAACO,GAAT,CAC9C,CAACC,OAAD,EAAUC,KAAV,KACEC,KAAK,CAAE,+BAA8BF,OAAQ,gBAAxC,EAAyD;MAC5DG,MAAM,EAAE,KADoD;MAE5D;MACAZ,OAAO,EAAE;QACP,gBAAgB,kBADT;QAEP,+BAA+B,GAFxB;QAGP,gCACE;MAJK;IAHmD,CAAzD,CAAL,CAUGa,IAVH,CAUSC,GAAD,IAAS;MACbC,OAAO,CAACC,GAAR,CAAYF,GAAZ;MACA,OAAOA,GAAG,CAACG,MAAJ,GAAa,GAAb,GACHH,GAAG,CAACI,IAAJ,EADG,GAEH;QAAEC,OAAO,EAAE,KAAX;QAAkBC,OAAO,EAAG,cAAaN,GAAG,CAACG,MAAO;MAApD,CAFJ;IAGD,CAfH,EAgBGJ,IAhBH,CAgBSQ,IAAD,IAAU;MACd,OAAO,EAAE,GAAGA,IAAL;QAAWC,IAAI,EAAErB,QAAQ,CAACS,KAAD;MAAzB,CAAP;IACD,CAlBH,EAkBKa,KAlBL,CAkBYC,KAAD,IAAWC,KAAK,CAACD,KAAD,CAlB3B,CAF4C,CAAhD;IAwBA,MAAME,aAAa,GAAGC,WAAW,CAAC,MAAM;MACtCC,OAAO,CAACC,GAAR,CAAYtB,cAAZ,EAA4BM,IAA5B,CAAkCiB,YAAD,IAC/B1B,iBAAiB,CAAC0B,YAAD,CADnB;MAGA,IAAIzB,YAAY,KAAK,CAArB,EAAwBC,eAAe,CAAC,KAAD,CAAf;IACzB,CALgC,EAK9BD,YAL8B,CAAjC;IAOA,OAAO,MAAM0B,aAAa,CAACL,aAAD,CAA1B;EACD,CAjCQ,EAiCN,CAACrB,YAAD,CAjCM,CAAT;EAmCA,oBACE;IAAK,SAAS,EAAC,aAAf;IAAA,uBACE,QAAC,KAAD;MACE,KAAK,EAAC,cADR;MAEE,OAAO,EAAEL,OAFX;MAGE,cAAc,EAAEG;IAHlB;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AASD;;GAlDQD,U;;KAAAA,U;AAoDT,eAAeA,UAAf"},"metadata":{},"sourceType":"module"}